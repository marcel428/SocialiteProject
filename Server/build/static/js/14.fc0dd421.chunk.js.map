{"version":3,"sources":["Components/Preview/index.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js"],"names":["Preview","props","state","template","location","query","videoFilePath","videoWidth","videoHeight","crop","unit","width","height","x","y","shouldRedirect","savedVideo","loading","percent","mainVideoWidth","mainVideoHeight","faceVideoWidth","faceVideoHeight","faceMarginLeftAndRight","faceMarginTop","faceMarginBottom","totalVideoWidth","totalVideoHeight","handleCrop","percentCrop","setState","sendSelectedVideo","console","log","mainVideo","faceVideo","newHeight","gamerVideo","resizeMainVideo","axios","post","process","then","res","data","prop","this","winCenterX","window","innerWidth","sourceRatio","displayPreviewWidth","faceRatio","facePreviewWidth","facePreviewHeight","totalFaceVideoWidth","totalFaceVideoHeight","clipTop","clipLeft","clipRight","clipBottom","faceMarginLeft","mainRatio","totalMainVideoWidth","totalMainVideoHeight","mainClipTop","mainClipRight","mainClipBottom","mainClipLeft","mainMarginLeft","mainMarginBottom","totalVideoDivHeight","to","pathname","displayPercentInSave","style","marginBottom","type","checked","value","readOnly","maxHeight","overflow","autoPlay","src","position","clipPath","left","bottom","textAlign","marginTop","onClick","Component","DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","Col","prefix","spans","span","offset","order","_propValue$span","length"],"mappings":"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","file":"static/js/14.fc0dd421.chunk.js","sourcesContent":["import React, { Component, useRef } from \"react\";\r\nimport ReactPlayer from 'react-player'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format } from \"react-string-format\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\n\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './Preview.css';\r\n\r\nclass Preview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    state = {\r\n\r\n        template: this.props.location.query,\r\n        videoFilePath: this.props.location.videoFilePath,\r\n        videoWidth: this.props.location.videoWidth,\r\n        videoHeight: this.props.location.videoHeight,\r\n        crop: {\r\n            unit: 'px',\r\n            width: 100,\r\n            height: 100,\r\n            x: (this.props.location.videoWidth - 100) / 2,\r\n            y: (this.props.location.videoHeight - 100) / 2\r\n        },\r\n        shouldRedirect: false,\r\n        savedVideo: '',\r\n        loading: false,\r\n\r\n        percent: 0.3,\r\n\r\n        mainVideoWidth: '',\r\n        mainVideoHeight: '',\r\n        faceVideoWidth: '',\r\n        faceVideoHeight: '',\r\n        faceMarginLeftAndRight: '',\r\n        faceMarginTop: '',\r\n        faceMarginBottom: '',\r\n        totalVideoWidth: '',\r\n        totalVideoHeight: '',\r\n\r\n    }\r\n    handleCrop = (crop, percentCrop) => {\r\n        this.setState({ crop })\r\n    }\r\n    sendSelectedVideo = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        console.log('this.props.location.mainVideo')\r\n        console.log(this.props.location.mainVideo)\r\n        const ratio = this.props.location.mainVideo.width / this.props.location.faceVideo.width;\r\n        var newHeight = this.props.location.mainVideo.height / (1 - this.props.location.query.gamerVideo.height);\r\n        var newY = this.props.location.mainVideo.y - (newHeight - this.props.location.mainVideo.height);\r\n        // if(newY<0){\r\n\r\n        // }\r\n        // if()\r\n\r\n        var resizeMainVideo = {\r\n            x: this.props.location.mainVideo.x,\r\n            y: this.props.location.mainVideo.y - (newHeight - this.props.location.mainVideo.height),\r\n            height: newHeight,\r\n            width: this.props.location.mainVideo.width\r\n        }\r\n\r\n        console.log('resizeMainVideo')\r\n        console.log(resizeMainVideo)\r\n\r\n        axios\r\n            .post(\r\n                `${process.env.REACT_APP_API_URL}/editor/thumbnail`, {\r\n                videoFilePath: this.props.location.videoFilePath,\r\n                template: this.props.location.query,\r\n                faceVideo: this.props.location.faceVideo ? this.props.location.faceVideo : null,\r\n                mainVideo: this.props.location.mainVideo\r\n            })\r\n            .then((res) => {\r\n                console.log('res')\r\n                console.log(res)\r\n                this.setState({\r\n                    loading: false,\r\n                    shouldRedirect: true,\r\n                    savedVideo: res.data\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const prop = this.props.location;\r\n        const winCenterX = window.innerWidth / 2;\r\n        const faceWinCenterY = 100;\r\n        const sourceRatio = prop.query.mainVideo.height / prop.query.mainVideo.width;\r\n        const displayPercentInSave = 0.3;\r\n        const displayPreviewWidth = window.innerWidth * displayPercentInSave;\r\n\r\n        if (prop.query.gamerVideo) {\r\n            //get ration btw face clip video and main clip Video\r\n            let faceRatio = displayPreviewWidth / prop.faceVideo.width;\r\n            let facePreviewWidth = displayPreviewWidth;\r\n            var facePreviewHeight = displayPreviewWidth * sourceRatio * prop.query.gamerVideo.height;\r\n\r\n            //zoom the source video by the faceRatio\r\n            var totalFaceVideoWidth = prop.videoWidth * faceRatio;\r\n            var totalFaceVideoHeight = prop.videoHeight * faceRatio;\r\n\r\n            //get the clip path of face video\r\n            var clipTop = prop.faceVideo.y * faceRatio;\r\n            var clipLeft = prop.faceVideo.x * faceRatio;\r\n            var clipRight = totalFaceVideoWidth - clipLeft - facePreviewWidth;\r\n            var clipBottom = totalFaceVideoHeight - (prop.faceVideo.y * faceRatio) - facePreviewHeight;\r\n\r\n\r\n            //get the magin left value to fix the face video to the center.\r\n            var faceCenterX = clipLeft + facePreviewWidth / 2;\r\n            var faceMarginLeft = winCenterX - faceCenterX;\r\n\r\n            //get the margin bottom value to fix the face video to the top\r\n            var faceMarginBottom = prop.faceVideo.y * faceRatio;\r\n\r\n        }\r\n\r\n        //get the clip path of main video\r\n        let mainRatio = displayPreviewWidth / prop.mainVideo.width;\r\n\r\n        //zoom the source video by the mainRatio\r\n        var totalMainVideoWidth = prop.videoWidth * mainRatio;\r\n        var totalMainVideoHeight = prop.videoHeight * mainRatio;\r\n\r\n        var mainClipTop = prop.mainVideo.y * mainRatio;\r\n        var mainClipRight = prop.videoWidth * mainRatio - prop.mainVideo.x * mainRatio - prop.mainVideo.width * mainRatio;\r\n        var mainClipBottom = prop.videoHeight * mainRatio - prop.mainVideo.y * mainRatio - prop.mainVideo.height * mainRatio;\r\n        var mainClipLeft = prop.mainVideo.x * mainRatio;\r\n\r\n\r\n        //get the magin left value to fix the main video to the center.\r\n        var mainCenterX = prop.mainVideo.x * mainRatio + prop.mainVideo.width * mainRatio / 2;\r\n        var mainMarginLeft = winCenterX - mainCenterX;\r\n\r\n        //to delete the small gap btw face video and main video\r\n        //cos div has a small margin.\r\n        var differ = 5;\r\n        //get the margin bottom value to link the main video to the face video\r\n        if (prop.query.gamerVideo) {\r\n            var mainMarginBottom = prop.mainVideo.y * mainRatio + (totalFaceVideoHeight - facePreviewHeight) + differ;\r\n        }\r\n        else\r\n            var mainMarginBottom = prop.mainVideo.y * mainRatio;\r\n\r\n        const totalVideoDivHeight = displayPreviewWidth * sourceRatio;\r\n\r\n        //redirecting save page after receiving server response.\r\n        //pass recieved saved video file name and display percent. it is needed for syncronizing \r\n        //the size of video in preview page and save page.\r\n\r\n        if (this.state.shouldRedirect) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: 'save',\r\n                    savedVideo: this.state.savedVideo,\r\n                    displayPercentInSave\r\n                }}\r\n            />\r\n        }\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.loading\r\n                        ?\r\n                        <div>\r\n                            Wait a second\r\n                        </div>\r\n                        :\r\n                        <div >\r\n                            <div style={{ marginBottom: \"30px\" }}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        {\r\n                                            this.state.template && this.state.template.gamerVideo\r\n                                                ?\r\n                                                <div>\r\n                                                    <span>Select Facecam&nbsp;&nbsp;</span>\r\n                                                    <input type=\"checkbox\" checked value={1} readOnly />\r\n                                                </div>\r\n                                                :\r\n                                                null\r\n                                        }\r\n\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {\r\n                                            this.state.template && this.state.template.mainVideo\r\n                                                ?\r\n                                                <div>\r\n                                                    <span>Select gamefeed&nbsp;&nbsp;</span>\r\n                                                    <input type=\"checkbox\" checked value={1} readOnly />\r\n                                                </div>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <span>Preview&nbsp;&nbsp;</span>\r\n                                        <input type=\"checkbox\" checked value={1} readOnly />\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div style={{ maxHeight: totalVideoDivHeight, overflow: \"hidden\", width: \"fit-content\" }}>\r\n                                {\r\n                                    prop.query.gamerVideo\r\n                                        ?\r\n                                        <div>\r\n                                            <video\r\n                                                autoPlay\r\n                                                width={totalFaceVideoWidth}\r\n                                                height={totalFaceVideoHeight}\r\n                                                src={this.props.location.videoFilePath}\r\n                                                style={{\r\n                                                    position: 'relative',\r\n                                                    clipPath: `inset(${clipTop}px ${clipRight}px ${clipBottom}px ${clipLeft}px)`,\r\n                                                    left: faceMarginLeft,\r\n                                                    bottom: faceMarginBottom\r\n                                                }}\r\n                                            >\r\n                                            </video>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                <div>\r\n                                    <video\r\n                                        autoPlay\r\n                                        width={totalMainVideoWidth}\r\n                                        height={totalMainVideoHeight}\r\n                                        src={this.props.location.videoFilePath}\r\n                                        style={{\r\n                                            position: 'relative',\r\n                                            clipPath: `inset(${mainClipTop}px ${mainClipRight}px ${mainClipBottom}px ${mainClipLeft}px)`,\r\n                                            left: mainMarginLeft,\r\n                                            bottom: mainMarginBottom\r\n                                        }}\r\n                                    >\r\n\r\n                                    </video>\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                            <div style={{ textAlign: \"center\", marginTop: '30px', marginBottom: 30 }}>\r\n                                <div>\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: \"/template\",\r\n                                            state: {\r\n                                                videoFilePath: prop.videoFilePath,\r\n                                                videoWidth: prop.videoWidth,\r\n                                                videoHeight: prop.videoHeight\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <button>\r\n                                            Change template\r\n                                        </button>\r\n                                    </Link>\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: prop.query.gamerVideo ? 'face-edit' : 'main-edit',\r\n                                            query: prop.query,\r\n                                            videoFilePath: prop.videoFilePath,\r\n                                            videoWidth: prop.videoWidth,\r\n                                            videoHeight: prop.videoHeight,\r\n                                        }} >\r\n                                        <button>\r\n                                            Redo\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                                <div>\r\n                                    <button onClick={this.sendSelectedVideo}>\r\n                                        save\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Preview;\r\n\r\nconst videoComponent = (props) => (\r\n\r\n    <video\r\n        autoPlay\r\n        loop\r\n        style={{ display: 'block', maxWidth: '100%' }}\r\n        onLoadStart={e => {\r\n            // You must inform ReactCrop when your media has loaded.\r\n            e.target.dispatchEvent(new Event('medialoaded', { bubbles: true }));\r\n        }}\r\n    >\r\n        <source src={props} type=\"video/mp4\" />\r\n    </video>\r\n);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;"],"sourceRoot":""}