{"version":3,"sources":["../../src/FileSaver.js","Components/Save/index.js","Service/idb.js"],"names":["autoBom","console","test","Blob","type","status","MouseEvent","document","window","self","global","navigator","HTMLAnchorElement","b","name","location","setTimeout","f","open","i","saveAs","module","Save","props","state","savedVideo","localStorage","getItem","displayPercentInSave","shouldRedirect","url","authed","displayQrcode","qrcode","uploadGoogleDrive","axios","get","process","then","res","setState","catch","error","log","download","goToHome","getQrcode","e","preventDefault","post","data","alert","videoPlayer","React","createRef","this","removeItem","clear","to","pathname","style","display","width","muted","playsInline","ref","onLoadedData","current","play","marginRight","marginLeft","autoPlay","controls","src","textAlign","padding","onClick","id","title","href","marginTop","Component","dbPromise","openDB","upgrade","db","createObjectStore","key","a","set","val","put"],"mappings":"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","file":"static/js/15.9d00d10c.chunk.js","sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import React, { Component, useRef } from \"react\";\r\nimport ReactPlayer from 'react-player'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format } from \"react-string-format\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { get, set, del, clear, keys } from \"./../../Service/idb\";\r\n\r\n\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './Save.css';\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\nclass Save extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoPlayer = React.createRef();\r\n\r\n    }\r\n    state = {\r\n        savedVideo: localStorage.getItem('savedVideo'),\r\n        displayPercentInSave: localStorage.getItem('displayPercentInSave'),\r\n        shouldRedirect: false,\r\n        url: null,\r\n        authed: false,\r\n        displayQrcode: false,\r\n        qrcode: ''\r\n    }\r\n    uploadGoogleDrive = () => {\r\n        axios\r\n            .get(\r\n                `${process.env.REACT_APP_API_URL}/googleDrive/upload`)\r\n            .then((res) => {\r\n                if (res.status == 200) {\r\n                    this.setState({\r\n                        shouldRedirect: true,\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n    }\r\n    download = () => {\r\n        saveAs(\r\n            `${process.env.REACT_APP_PUBLIC_URL}/editedVideos/${this.state.savedVideo}`,\r\n            this.state.savedVideo\r\n        )\r\n    }\r\n    goToHome = () => {\r\n        this.setState({\r\n            shouldRedirect: true\r\n        })\r\n    }\r\n    getQrcode = (e) => {\r\n        e.preventDefault();\r\n        axios\r\n            .post(\r\n                `${process.env.REACT_APP_API_URL}/qrcode/`, {\r\n                url: `${process.env.REACT_APP_PUBLIC_URL}/editedVideos/${this.state.savedVideo}`\r\n            })\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    alert('QR code is gernerated successfully!')\r\n                    this.setState({\r\n                        displayQrcode: true,\r\n                        qrcode: res.data\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        axios\r\n            .get(\r\n                `${process.env.REACT_APP_API_URL}/googleDrive/?fileName=${this.state.savedVideo}`)\r\n            .then((res) => {\r\n                if (res.status == 200) {\r\n                    console.log('res')\r\n                    console.log(res)\r\n                    if (res.data.authed) {\r\n                        this.setState({\r\n                            authed: true\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            url: res.data.url,\r\n                            authed: false\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.shouldRedirect) {\r\n            if (localStorage.getItem('faceVideo')) {\r\n                localStorage.removeItem('faceVideo')\r\n            }\r\n            if (localStorage.getItem('mainVideo')) {\r\n                localStorage.removeItem('mainVideo')\r\n            }\r\n            if (localStorage.getItem('savedVideo')) {\r\n                localStorage.removeItem('savedVideo')\r\n            }\r\n            if (localStorage.getItem('template')) {\r\n                localStorage.removeItem('template')\r\n            }\r\n            if (localStorage.getItem('videoFilePath')) {\r\n                localStorage.removeItem('videoFilePath')\r\n            }\r\n            if (localStorage.getItem('videoHeight')) {\r\n                localStorage.removeItem('videoHeight')\r\n            }\r\n            if (localStorage.getItem('videoWidth')) {\r\n                localStorage.removeItem('videoWidth')\r\n            }\r\n            if (localStorage.getItem('displayPercentInSave')) {\r\n                localStorage.removeItem('displayPercentInSave')\r\n            }\r\n            clear();\r\n\r\n            return <Redirect\r\n                to={{\r\n                    pathname: '/',\r\n                }}\r\n            />\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <div style={{ display: 'flex', width: \"100%\" }}>\r\n\r\n                    {\r\n                        this.state.savedVideo\r\n                            ?\r\n                            <video\r\n                                muted\r\n                                playsInline\r\n                                ref={this.videoPlayer}\r\n                                onLoadedData={() => {\r\n                                    this.videoPlayer.current.play();\r\n                                }}\r\n                                style={{ marginRight: \"auto\", marginLeft: \"auto\" }}\r\n                                autoPlay\r\n                                controls\r\n                                src={`${process.env.REACT_APP_PUBLIC_URL}/editedVideos/${this.state.savedVideo}`}\r\n                            >\r\n                            </video>\r\n                            :\r\n                            null\r\n                    }\r\n                </div>\r\n                <div style={{ textAlign: 'center', padding: \"30px\" }}>\r\n\r\n                    <button onClick={this.goToHome}>\r\n                        go to home\r\n                    </button>\r\n\r\n                </div>\r\n                <div style={{ textAlign: 'center', padding: \"0px\" }}>\r\n\r\n                    <button onClick={(e) => { this.getQrcode(e) }}>\r\n                        Get QR code\r\n                    </button>\r\n\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.download}>\r\n                        download\r\n                    </button>\r\n                    <DropdownButton id=\"dropdown-basic-button\" title=\"upload\">\r\n                        {\r\n                            !this.state.authed\r\n                                ?\r\n                                <a href={this.state.url}>\r\n                                    Google drive\r\n                                </a>\r\n                                :\r\n                                <button onClick={this.uploadGoogleDrive}>\r\n                                    Google drive\r\n                                </button>\r\n                        }\r\n\r\n\r\n                    </DropdownButton>\r\n                </div>\r\n                {\r\n                    this.state.displayQrcode\r\n                        ?\r\n                        <div style={{ marginTop: '30px', textAlign: 'center' }}>\r\n                            <img src={this.state.qrcode}></img>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n\r\n            </div >\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Save;\r\n","import { openDB } from 'idb';\r\n\r\nconst dbPromise = openDB('keyval-store', 1, {\r\n  upgrade(db) {\r\n    db.createObjectStore('keyval');\r\n  },\r\n});\r\n\r\nexport async function get(key) {\r\n  return (await dbPromise).get('keyval', key);\r\n}\r\nexport async function set(key, val) {\r\n  return (await dbPromise).put('keyval', val, key);\r\n}\r\nexport async function del(key) {\r\n  return (await dbPromise).delete('keyval', key);\r\n}\r\nexport async function clear() {\r\n  return (await dbPromise).clear('keyval');\r\n}\r\nexport async function keys() {\r\n  return (await dbPromise).getAllKeys('keyval');\r\n}"],"sourceRoot":""}