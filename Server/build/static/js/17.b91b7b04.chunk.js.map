{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","Components/MainEdit/index.js"],"names":["DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","Col","prefix","spans","span","offset","order","_propValue$span","length","Edit","state","template","JSON","parse","localStorage","getItem","videoFilePath","videoWidth","videoHeight","faceVideo","crop","unit","width","height","aspect","x","y","shouldRedirect","previewVideo","loading","templateRedirect","disToRealRatio","handleCrop","percentCrop","setState","goToPreview","goToTemplate","videoPlayer","createRef","totalDiv","this","current","offsetWidth","prop","videoRatio","name","mainVideoRatio","mainVideo","gamerVideo","removeItem","to","pathname","mainVideoCrop","setItem","stringify","style","marginTop","textAlign","md","padding","keepSelection","onChange","renderComponent","videoComponent","marginBottom","onClick","onLoadedData","play","muted","loop","display","onLoadStart","e","target","dispatchEvent","Event","bubbles","src","type"],"mappings":"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","file":"static/js/17.b91b7b04.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React, { Component, useRef } from \"react\";\r\nimport ReactPlayer from 'react-player'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format } from \"react-string-format\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\n\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './MainEdit.css';\r\n\r\nclass Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoPlayer = React.createRef();\r\n        this.totalDiv = React.createRef()\r\n\r\n    }\r\n    state = {\r\n\r\n        template: JSON.parse(localStorage.getItem('template')),\r\n        videoFilePath: localStorage.getItem('videoFilePath'),\r\n        videoWidth: localStorage.getItem('videoWidth'),\r\n        videoHeight: localStorage.getItem('videoHeight'),\r\n        faceVideo: localStorage.getItem('faceVideo') ? JSON.parse(localStorage.getItem('faceVideo')) : null,\r\n        crop: {\r\n            unit: 'px',\r\n            width: 50,\r\n            height: 50,\r\n            aspect: 1,\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        shouldRedirect: false,\r\n        previewVideo: '',\r\n        loading: false,\r\n        templateRedirect: false,\r\n        disToRealRatio: 1\r\n\r\n\r\n    }\r\n    handleCrop = (crop, percentCrop) => {\r\n        this.setState({ crop })\r\n    }\r\n\r\n    goToPreview = () => {\r\n        this.setState({\r\n            shouldRedirect: true\r\n        })\r\n    }\r\n    goToTemplate = () => {\r\n        this.setState({\r\n            templateRedirect: true\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        var disToRealRatio = this.totalDiv.current.offsetWidth * (10 / 12) / localStorage.getItem('videoWidth');\r\n\r\n        this.setState({\r\n            disToRealRatio\r\n        })\r\n\r\n        var divide = 3;\r\n        var prop = this.state;\r\n        const videoRatio = prop.videoHeight / prop.videoWidth;\r\n\r\n        if (prop.template.name == \"split\") {\r\n            var mainVideoRatio = prop.template.mainVideo.height * (1 - prop.template.gamerVideo.height) / prop.template.mainVideo.width;\r\n        } else {\r\n            var mainVideoRatio = prop.template.mainVideo.height / prop.template.mainVideo.width;\r\n        }\r\n\r\n        var crop = {};\r\n        if (mainVideoRatio < videoRatio) {\r\n            crop = {\r\n                unit: 'px',\r\n                width: prop.videoWidth * disToRealRatio,\r\n                height: prop.videoWidth * mainVideoRatio * disToRealRatio,\r\n                aspect: 1 / mainVideoRatio,\r\n                x: 0,\r\n                y: ((prop.videoHeight - (prop.videoWidth * mainVideoRatio)) / 2) * disToRealRatio\r\n            }\r\n        } else {\r\n            crop = {\r\n                unit: 'px',\r\n                width: prop.videoHeight / mainVideoRatio * disToRealRatio,\r\n                height: prop.videoHeight * disToRealRatio,\r\n                aspect: 1 / mainVideoRatio,\r\n                x: ((prop.videoWidth - (prop.videoHeight / mainVideoRatio)) / 2) * disToRealRatio,\r\n                y: 0\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            crop\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.templateRedirect) {\r\n            localStorage.removeItem('template');\r\n            if (localStorage.getItem('faceVideo')) {\r\n                localStorage.removeItem('faceVideo');\r\n            }\r\n            return <Redirect\r\n                to={{\r\n                    pathname: `template`\r\n                }} />\r\n        }\r\n\r\n        if (this.state.shouldRedirect) {\r\n            const mainVideoCrop = {\r\n                width: this.state.crop.width / this.state.disToRealRatio,\r\n                height: this.state.crop.height / this.state.disToRealRatio,\r\n                x: this.state.crop.x / this.state.disToRealRatio,\r\n                y: this.state.crop.y / this.state.disToRealRatio,\r\n            }\r\n\r\n            localStorage.setItem('mainVideo', JSON.stringify(mainVideoCrop));\r\n            localStorage.setItem('selectedMainVideo', JSON.stringify(this.state.crop));\r\n            return <Redirect\r\n                to={{\r\n                    pathname: `preview`\r\n                }} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.loading\r\n                        ?\r\n                        <div style={{ marginTop: '100px', textAlign: 'center' }} >\r\n                            <h5>\r\n                                Wait a second...\r\n                            </h5>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <Row ref={this.totalDiv} style={{ width: \"100%\" }}>\r\n                                <Col md={10} style={{ padding: '0px' }}>\r\n                                    <div style={{ textAlign: 'center' }}>\r\n                                        <ReactCrop\r\n                                            style={{ width: '100%' }}\r\n                                            crop={this.state.crop}\r\n                                            keepSelection={true}\r\n                                            onChange={(crop, percentCrop) => { this.handleCrop(crop, percentCrop) }}\r\n                                            renderComponent={videoComponent(this.state.videoFilePath, this.videoPlayer)} />\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <div style={{ marginTop: '30px', marginBottom: \"30px\", textAlign: 'center' }}>\r\n                                        <button onClick={this.goToPreview}>\r\n                                            Preview\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        <button onClick={this.goToTemplate}>\r\n                                            Change Template\r\n                                        </button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Edit;\r\n\r\nconst videoComponent = (props, videoPlayer) => (\r\n\r\n    <video\r\n        ref={videoPlayer}\r\n        onLoadedData={() => videoPlayer.current.play()}\r\n        muted\r\n        loop\r\n        style={{ display: 'block', width: '100%' }}\r\n        onLoadStart={e => {\r\n            // You must inform ReactCrop when your media has loaded.\r\n            e.target.dispatchEvent(new Event('medialoaded', { bubbles: true }));\r\n        }}\r\n    >\r\n        <source src={props} type=\"video/mp4\" />\r\n    </video>\r\n);"],"sourceRoot":""}