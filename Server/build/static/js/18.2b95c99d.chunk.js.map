{"version":3,"sources":["Components/Auth/Register/index.js","Store/actions/actions.js"],"names":["Register","props","state","name","email","password","confirmPassword","nameKey","emailKey","passwordKey","confirmPasswordKey","nameRequired","emailRequired","passwordRequired","confirmPasswordRequired","serverError","error","shouldRedirect","handleInput","e","key","setState","target","value","length","test","register","axios","post","process","then","res","data","status","localStorage","setItem","JSON","stringify","user","token","saveAuthInfo","this","to","style","marginTop","textAlign","color","onChange","type","onClick","Component","connect","auth","dispatch","SAVE_AUTH_INFO","payload","changeMembership","membership","CHANGE_MEMBERSHIP","changeBalance","balance","CHANGE_BALANCE"],"mappings":"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","file":"static/js/18.2b95c99d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthInfo } from '../../../Store/actions/actions'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        nameKey: false,\r\n        emailKey: false,\r\n        passwordKey: false,\r\n        confirmPasswordKey: false,\r\n        nameRequired: false,\r\n        emailRequired: false,\r\n        passwordRequired: false,\r\n        confirmPasswordRequired: false,\r\n        serverError: false,\r\n        error: '',\r\n        shouldRedirect:false\r\n    }\r\n    handleInput = (e, key) => {\r\n        this.setState({\r\n            [key]: e.target.value\r\n        })\r\n\r\n        if (key == 'name') {\r\n            if (e.target.value.length < 4) {\r\n                this.setState({\r\n                    nameKey: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nameKey: false\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    nameRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nameRequired: false\r\n                })\r\n            }\r\n\r\n        }\r\n        if (key == 'email') {\r\n            const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\r\n            const result = pattern.test(e.target.value);\r\n            if (result === true) {\r\n                this.setState({\r\n                    emailKey: false,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    emailKey: true\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    emailRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    emailRequired: false\r\n                })\r\n            }\r\n\r\n        }\r\n        if (key == 'password') {\r\n            if (e.target.value.length < 4) {\r\n                this.setState({\r\n                    passwordKey: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    passwordKey: false\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    passwordRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    passwordRequired: false\r\n                })\r\n            }\r\n        }\r\n        if (key == 'confirmPassword') {\r\n            if (e.target.value != this.state.password) {\r\n                this.setState({\r\n                    confirmPasswordKey: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    confirmPasswordKey: false\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    confirmPasswordRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    confirmPasswordRequired: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n    register = () => {\r\n        if (this.state.name == '') {\r\n            this.setState({\r\n                nameRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (this.state.email == '') {\r\n            this.setState({\r\n                emailRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (this.state.password == '') {\r\n            this.setState({\r\n                passwordRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (this.state.confirmPassword == '') {\r\n            this.setState({\r\n                confirmPasswordRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (\r\n            this.state.nameKey ||\r\n            this.state.emailKey ||\r\n            this.state.passwordKey ||\r\n            this.state.confirmPasswordKey\r\n        ) {\r\n            return;\r\n        } else {\r\n\r\n            axios\r\n                .post(\r\n                    `${process.env.REACT_APP_API_URL}/auth/register`,\r\n                    {\r\n                        name: this.state.name,\r\n                        email: this.state.email,\r\n                        password: this.state.password,\r\n                        confirmPassword: this.state.confirmPassword,\r\n                    }\r\n\r\n                )\r\n                .then((res) => {\r\n                    if (res.data.status > 300) {\r\n                        this.setState({\r\n                            serverError: true,\r\n                            error: res.data.error\r\n                        })\r\n                    }else{\r\n                       \r\n                        localStorage.setItem('user',JSON.stringify(res.data.user));\r\n                        localStorage.setItem('token',res.data.token)\r\n                        this.props.saveAuthInfo(res.data.user, res.data.token);\r\n                        this.setState({shouldRedirect:true})\r\n                    }\r\n                    \r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if( this.state.shouldRedirect){\r\n            return <Redirect\r\n            to=\"/\"  />\r\n        }\r\n\r\n        return (\r\n            <div style={{ marginTop: '100px', textAlign: \"center\" }}>\r\n                {\r\n                    this.state.serverError\r\n                        ?\r\n                        <div style={{color:\"red\"}}>\r\n                            {this.state.error}\r\n                            </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        name:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'name')} type=\"text\" />\r\n                    {\r\n                        this.state.nameKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                name should be greater than 4 characters.\r\n                   </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.nameRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                name is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        email:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'email')} type=\"email\" />\r\n                    {\r\n                        this.state.emailKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                email is invalid.\r\n                   </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.emailRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                email is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        password:\r\n                   </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'password')} type=\"password\" />\r\n                    {\r\n                        this.state.passwordKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                password should be greater than 4 characters.\r\n                   </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.passwordRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                password is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        confirm password:\r\n                   </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'confirmPassword')} type=\"password\" />\r\n                    {\r\n                        this.state.confirmPasswordKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                password did not match.\r\n                   </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.confirmPasswordRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                confirmed password is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <button onClick={() => { this.register() }}>\r\n                        register\r\n                   </button>\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <Link to=\"/login\">\r\n                        go to login\r\n                   </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveAuthInfo: (user,token) => dispatch(saveAuthInfo(user,token)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","\nimport {SAVE_AUTH_INFO, CHANGE_MEMBERSHIP, CHANGE_BALANCE} from \"../constants\"\nexport function saveAuthInfo(user,token) {\n    // console.log(\"recall\", cart)\n    if( token== \"undefined\" || typeof token ==\"undefined\"){\n        token = false\n    }\n    \n    return {\n        type: SAVE_AUTH_INFO,\n        payload: {user,token}\n    }\n}\nexport function changeMembership(membership) {\n    // console.log(\"recall\", cart)\n    if( membership== \"undefined\" || typeof membership ==\"undefined\"){\n        membership = false\n    }\n    \n    return {\n        type: CHANGE_MEMBERSHIP,\n        payload: membership\n    }\n}\nexport function changeBalance(balance) {\n    // console.log(\"recall\", cart)\n    if( balance== \"undefined\" || typeof balance ==\"undefined\"){\n        balance = false\n    }\n    \n    return {\n        type: CHANGE_BALANCE,\n        payload: balance\n    }\n}"],"sourceRoot":""}