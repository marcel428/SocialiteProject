{"version":3,"sources":["Components/Deposit/index.js","Store/actions/actions.js"],"names":["customStyles","content","width","height","margin","marginTop","Deposit","props","state","amount","modalOpen","handleVideoUpload","event","preventDefault","console","log","file","target","files","formData","FormData","append","axios","post","process","headers","then","response","setState","videoFilePath","data","catch","error","handleChange","e","value","openModal","alert","closeModal","createOrder","actions","orderId","Date","now","description","res","result","id","onApprove","tt","order","orderID","userId","auth","user","balance","JSON","parse","localStorage","getItem","setItem","stringify","changeBalance","this","style","textAlign","onChange","type","onClick","isOpen","onRequestClose","contentLabel","ariaHideApp","options","clientId","Component","connect","dispatch","saveAuthInfo","token","SAVE_AUTH_INFO","payload","changeMembership","membership","CHANGE_MEMBERSHIP","CHANGE_BALANCE"],"mappings":"yOAUMA,EAAe,CACjBC,QAAS,CACLC,MAAO,MACPC,OAAQ,OACRC,OAAQ,OACRC,UAAW,UAIbC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEVC,MAAQ,CACJC,OAAQ,KACRC,WAAW,GALI,EAQnBC,kBAAoB,SAACC,GACjBA,EAAMC,iBACNC,QAAQC,IAAI,sBACZ,IAAIC,EAAOJ,EAAMK,OAAOC,MAClBC,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUL,EAAK,IAO/BM,IACIC,KADJ,UACYC,8BADZ,WACoDL,EAPrC,CACXM,QAAS,CACL,eAAgB,yBAMnBC,MAAK,SAACC,GACH,EAAKC,SAAS,CACVC,cAAc,GAAD,OAAKL,+BAAL,2BAAwDG,EAASG,WAEnFC,OAAM,SAACC,GACNlB,QAAQC,IAAIiB,OA3BL,EA+BnBC,aAAe,SAACC,GACZ,EAAKN,SAAS,CACVnB,OAAQyB,EAAEjB,OAAOkB,SAjCN,EAoCnBC,UAAY,WACJ,EAAK5B,MAAMC,OAAS,EACpB,EAAKmB,SAAS,CACVlB,WAAW,IAGf2B,MAAM,wBA1CK,EA4CnBC,WAAa,WACT,EAAKV,SAAS,CACVlB,WAAW,KA9CA,EAiDnB6B,YAAc,SAACT,EAAMU,GACjB,OAAOlB,IACFC,KADE,UAEIC,8BAFJ,kBAEmD,CAClDiB,QAASC,KAAKC,MACdlC,OAAQ,EAAKD,MAAMC,OACnBmC,YAAa,YAEflB,MAAK,SAAUmB,GAGb,OAFA/B,QAAQC,IAAI,OACZD,QAAQC,IAAI8B,GACLA,EAAIf,KAAKgB,OAAOC,OA5DhB,EAiEnBC,UAAY,SAAClB,EAAMU,GACf,IAAMS,EAAG,eACT,OAAO3B,IACFC,KADE,UAEIC,8BAFJ,mBAEoD,CACnD0B,MAAO,CACHH,GAAIjB,EAAKqB,QACTC,OAAQ,EAAK7C,MAAM8C,KAAKC,KAAKP,MAElCrB,MAAK,SAAUmB,GACd,GAAIA,EAAIf,KAAKyB,QAAS,CAClB,IAAID,EAAKE,KAAKC,MAAMC,aAAaC,QAAQ,SACzCL,EAAKC,QAASV,EAAIf,KAAKyB,QACvBG,aAAaE,QAAQ,OAAQJ,KAAKK,UAAUP,IAC5CL,EAAG1C,MAAMuD,cAAcjB,EAAIf,KAAKyB,SAChCN,EAAGX,aAEP,OAAOO,MAlFA,E,qDAwFT,IAAD,OAGL,OAFA/B,QAAQC,IAAI,cACZD,QAAQC,IAAIgD,KAAKxD,OAEb,sBAAKyD,MAAO,CAAE3D,UAAW,QAAS4D,UAAW,UAA7C,UACI,8BACI,kDAIJ,sBAAKD,MAAO,CAAE3D,UAAW,QAAzB,UACI,+BACI0D,KAAKxD,MAAM8C,KAAKC,KAAKC,UAEzB,mDAIJ,sBAAKS,MAAO,CAAE3D,UAAW,QAAzB,UACI,0CAGA,8BACI,uBAAO6D,SAAU,SAAChC,GAAD,OAAO,EAAKD,aAAaC,IAAIiC,KAAK,gBAG3D,qBAAKH,MAAO,CAAE3D,UAAW,QACrB+D,QAAS,kBAAM,EAAKhC,aADxB,SAGI,+CAIJ,cAAC,IAAD,CACIiC,OAAQN,KAAKvD,MAAME,UACnB4D,eAAgBP,KAAKzB,WACrBiC,aAAa,eACbC,aAAa,EACbR,MAAOhE,EALX,SAOI,cAAC,eAAD,CACIuC,YAAa,SAACT,EAAMU,GAAP,OAAmB,EAAKD,YAAYT,EAAMU,IACvDQ,UAAW,SAAClB,EAAMU,GAAP,OAAmB,EAAKQ,UAAUlB,EAAMU,IACnDiC,QAAS,CACLC,SAAU,+F,GArIhBC,aAyJPC,uBAVS,SAAApE,GAAK,MAAK,CAC9B6C,KAAM7C,EAAM6C,SAGW,SAAAwB,GACvB,MAAO,CACHf,cAAe,SAACP,GAAD,OAAasB,EAASf,YAAcP,QAI5CqB,CAA6CtE,I,gCC3K5D,kHACO,SAASwE,EAAaxB,EAAKyB,GAM9B,MAJY,aAARA,GAAsC,oBAARA,IAC9BA,GAAQ,GAGL,CACHZ,KAAMa,IACNC,QAAS,CAAC3B,OAAKyB,UAGhB,SAASG,EAAiBC,GAM7B,MAJiB,aAAbA,GAAgD,oBAAbA,IACnCA,GAAa,GAGV,CACHhB,KAAMiB,IACNH,QAASE,GAGV,SAASrB,EAAcP,GAM1B,MAJc,aAAVA,GAA0C,oBAAVA,IAChCA,GAAU,GAGP,CACHY,KAAMkB,IACNJ,QAAS1B","file":"static/js/19.2b822a21.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport { changeBalance } from '../../Store/actions/actions'\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport Modal from 'react-modal';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        width: '50%',\r\n        height: 'auto',\r\n        margin: 'auto',\r\n        marginTop: '120px'\r\n    }\r\n};\r\n\r\nclass Deposit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        amount: null,\r\n        modalOpen: false,\r\n    }\r\n\r\n    handleVideoUpload = (event) => {\r\n        event.preventDefault();\r\n        console.log('event.target.files')\r\n        var file = event.target.files;\r\n        const formData = new FormData();\r\n        formData.append('myfile', file[0]);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        axios.\r\n            post(`${process.env.REACT_APP_API_URL}/upload`, formData, config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    videoFilePath: `${process.env.REACT_APP_PUBLIC_URL}/uploadedVideos/${response.data}`\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n\r\n    };\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            amount: e.target.value\r\n        })\r\n    }\r\n    openModal = () => {\r\n        if (this.state.amount > 0)\r\n            this.setState({\r\n                modalOpen: true\r\n            })\r\n        else\r\n            alert('please input amount')\r\n    }\r\n    closeModal = () => {\r\n        this.setState({\r\n            modalOpen: false\r\n        })\r\n    }\r\n    createOrder = (data, actions) => {\r\n        return axios\r\n            .post(\r\n                `${process.env.REACT_APP_API_URL}/paypal/create`, {\r\n                orderId: Date.now(),\r\n                amount: this.state.amount,\r\n                description: 'mechant'\r\n            }\r\n            ).then(function (res) {\r\n                console.log('res')\r\n                console.log(res)\r\n                return res.data.result.id;\r\n            })\r\n\r\n    };\r\n\r\n    onApprove = (data, actions) => {\r\n        const tt=this;\r\n        return axios\r\n            .post(\r\n                `${process.env.REACT_APP_API_URL}/paypal/capture`, {\r\n                order: {\r\n                    id: data.orderID,\r\n                    userId: this.props.auth.user.id\r\n                }\r\n            }).then(function (res) {\r\n                if (res.data.balance) {\r\n                    let user=JSON.parse(localStorage.getItem('user'));\r\n                    user.balance= res.data.balance;\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    tt.props.changeBalance(res.data.balance);\r\n                    tt.closeModal();\r\n                }\r\n                return res;\r\n            })\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        console.log('this.props')\r\n        console.log(this.props)\r\n        return (\r\n            <div style={{ marginTop: '100px', textAlign: 'center' }}>\r\n                <div>\r\n                    <h3>\r\n                        Make a deposit\r\n                    </h3>\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <span>\r\n                       {this.props.auth.user.balance}\r\n                    </span>\r\n                    <span>\r\n                        &nbsp;&nbsp; usd\r\n                    </span>\r\n                </div>\r\n                <div style={{ marginTop: '50px' }}>\r\n                    <div>\r\n                        amount:\r\n                    </div>\r\n                    <div>\r\n                        <input onChange={(e) => this.handleChange(e)} type=\"number\" />\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginTop: \"50px\" }}\r\n                    onClick={() => this.openModal()}\r\n                >\r\n                    <button>\r\n                        deposit\r\n                    </button>\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.modalOpen}\r\n                    onRequestClose={this.closeModal}\r\n                    contentLabel=\"Paypal Modal\"\r\n                    ariaHideApp={false}\r\n                    style={customStyles}\r\n                >\r\n                    <PayPalButton\r\n                        createOrder={(data, actions) => this.createOrder(data, actions)}\r\n                        onApprove={(data, actions) => this.onApprove(data, actions)}\r\n                        options={{\r\n                            clientId: \"Aegg544wO3m11jblWTgE_9xBk6erCLmdbLrrfrTFkfdniH6xrV9zMK7IvXD499YACCG3E4DliH9AQqBO\"\r\n                        }}\r\n                    />\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBalance: (balance) => dispatch(changeBalance(balance)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Deposit)","\nimport {SAVE_AUTH_INFO, CHANGE_MEMBERSHIP, CHANGE_BALANCE} from \"../constants\"\nexport function saveAuthInfo(user,token) {\n    // console.log(\"recall\", cart)\n    if( token== \"undefined\" || typeof token ==\"undefined\"){\n        token = false\n    }\n    \n    return {\n        type: SAVE_AUTH_INFO,\n        payload: {user,token}\n    }\n}\nexport function changeMembership(membership) {\n    // console.log(\"recall\", cart)\n    if( membership== \"undefined\" || typeof membership ==\"undefined\"){\n        membership = false\n    }\n    \n    return {\n        type: CHANGE_MEMBERSHIP,\n        payload: membership\n    }\n}\nexport function changeBalance(balance) {\n    // console.log(\"recall\", cart)\n    if( balance== \"undefined\" || typeof balance ==\"undefined\"){\n        balance = false\n    }\n    \n    return {\n        type: CHANGE_BALANCE,\n        payload: balance\n    }\n}"],"sourceRoot":""}