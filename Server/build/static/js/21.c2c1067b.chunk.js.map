{"version":3,"sources":["Components/Auth/ForgotPassword/index.js","Store/actions/actions.js"],"names":["ForgotPassword","props","state","email","emailKey","emailRequired","shouldRedirect","handleInput","e","setState","target","value","test","confirm","axios","post","process","then","res","data","status","serverError","error","alert","localStorage","setItem","this","to","style","marginTop","textAlign","color","onChange","type","onClick","Component","connect","auth","dispatch","saveAuthInfo","user","token","SAVE_AUTH_INFO","payload","changeMembership","membership","CHANGE_MEMBERSHIP","changeBalance","balance","CHANGE_BALANCE"],"mappings":"sNAOMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEVC,MAAQ,CACJC,MAAO,GACPC,UAAU,EACVC,eAAe,EACfC,gBAAe,GAPA,EAUnBC,YAAc,SAACC,GAEX,EAAKC,SAAS,CACVN,MAAOK,EAAEE,OAAOC,SAML,IAHC,gEACOC,KAAKJ,EAAEE,OAAOC,OAGjC,EAAKF,SAAS,CACVL,UAAU,IAGd,EAAKK,SAAS,CACVL,UAAU,IAII,IAAlBI,EAAEE,OAAOC,MACT,EAAKF,SAAS,CACVJ,eAAe,IAGnB,EAAKI,SAAS,CACVJ,eAAe,KAnCR,EAwCnBQ,QAAU,WACNC,IACKC,KADL,UAEWC,qCAFX,qBAGQ,CACIb,MAAO,EAAKD,MAAMC,QAGzBc,MAAK,SAACC,GACCA,EAAIC,KAAKC,OAAS,IAClB,EAAKX,SAAS,CACVY,aAAa,EACbC,MAAOJ,EAAIC,KAAKG,SAGpBC,MAAM,wCACNC,aAAaC,QAAQ,iBAAiB,EAAKvB,MAAMC,OACjD,EAAKM,SAAS,CACVH,gBAAe,SA1DhB,E,qDAkET,IAAD,OACL,OAAIoB,KAAKxB,MAAMI,eACJ,cAAC,IAAD,CACHqB,GAAG,iBAIP,sBAAKC,MAAO,CAAEC,UAAW,QAASC,UAAW,UAA7C,UAEQJ,KAAKxB,MAAMmB,YAEP,qBAAKO,MAAO,CAAEG,MAAO,OAArB,SACKL,KAAKxB,MAAMoB,QAGhB,KAER,sBAAKM,MAAO,CAAEC,UAAW,QAAzB,UACI,yCAGA,uBAAOG,SAAU,SAACxB,GAAD,OAAO,EAAKD,YAAYC,IAAIyB,KAAK,UAE9CP,KAAKxB,MAAME,SAEP,qBAAKwB,MAAO,CAAEG,MAAO,OAArB,+BAIA,KAGJL,KAAKxB,MAAMG,cAEP,qBAAKuB,MAAO,CAAEG,MAAO,OAArB,gCAIA,QAKZ,qBAAKH,MAAO,CAAEC,UAAW,QAAzB,SACI,wBAAQK,QAAS,WAAQ,EAAKrB,WAA9B,wBAIJ,qBAAKe,MAAO,CAAEC,UAAW,QAAzB,SACI,cAAC,IAAD,CAAMF,GAAG,IAAT,iC,GApHSQ,aAwIdC,uBAVS,SAAAlC,GAAK,MAAK,CAC9BmC,KAAMnC,EAAMmC,SAGW,SAAAC,GACvB,MAAO,CACHC,aAAc,SAACC,EAAMC,GAAP,OAAiBH,EAASC,YAAaC,EAAMC,QAIpDL,CAA6CpC,I,gCC9I5D,kHACO,SAASuC,EAAaC,EAAKC,GAM9B,MAJY,aAARA,GAAsC,oBAARA,IAC9BA,GAAQ,GAGL,CACHR,KAAMS,IACNC,QAAS,CAACH,OAAKC,UAGhB,SAASG,EAAiBC,GAM7B,MAJiB,aAAbA,GAAgD,oBAAbA,IACnCA,GAAa,GAGV,CACHZ,KAAMa,IACNH,QAASE,GAGV,SAASE,EAAcC,GAM1B,MAJc,aAAVA,GAA0C,oBAAVA,IAChCA,GAAU,GAGP,CACHf,KAAMgB,IACNN,QAASK","file":"static/js/21.c2c1067b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthInfo } from '../../../Store/actions/actions'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        email: '',\r\n        emailKey: false,\r\n        emailRequired: false,\r\n        shouldRedirect:false\r\n\r\n    }\r\n    handleInput = (e) => {\r\n\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n\r\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\r\n        const result = pattern.test(e.target.value);\r\n\r\n        if (result === true) {\r\n            this.setState({\r\n                emailKey: false,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                emailKey: true\r\n            })\r\n        }\r\n\r\n        if (e.target.value == '') {\r\n            this.setState({\r\n                emailRequired: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                emailRequired: false\r\n            })\r\n        }\r\n\r\n    }\r\n    confirm = () => {\r\n        axios\r\n            .post(\r\n                `${process.env.REACT_APP_API_URL}/auth/resend-code`,\r\n                {\r\n                    email: this.state.email,\r\n                }\r\n            )\r\n            .then((res) => {\r\n                if (res.data.status > 300) {\r\n                    this.setState({\r\n                        serverError: true,\r\n                        error: res.data.error\r\n                    })\r\n                } else {\r\n                    alert('Sent verification code successfully!');\r\n                    localStorage.setItem('emailForForgot',this.state.email);\r\n                    this.setState({\r\n                        shouldRedirect:true\r\n                    })\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.shouldRedirect) {\r\n            return <Redirect\r\n                to=\"/verify-code\" />\r\n        }\r\n\r\n        return (\r\n            <div style={{ marginTop: '100px', textAlign: \"center\" }}>\r\n                {\r\n                    this.state.serverError\r\n                        ?\r\n                        <div style={{ color: \"red\" }}>\r\n                            {this.state.error}\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        email:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e)} type=\"email\" />\r\n                    {\r\n                        this.state.emailKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                email is invalid.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.emailRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                email is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <button onClick={() => { this.confirm() }}>\r\n                        Send OTP\r\n                    </button>\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <Link to=\"/\">\r\n                        Go To Home\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveAuthInfo: (user, token) => dispatch(saveAuthInfo(user, token)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword )\r\n","\nimport {SAVE_AUTH_INFO, CHANGE_MEMBERSHIP, CHANGE_BALANCE} from \"../constants\"\nexport function saveAuthInfo(user,token) {\n    // console.log(\"recall\", cart)\n    if( token== \"undefined\" || typeof token ==\"undefined\"){\n        token = false\n    }\n    \n    return {\n        type: SAVE_AUTH_INFO,\n        payload: {user,token}\n    }\n}\nexport function changeMembership(membership) {\n    // console.log(\"recall\", cart)\n    if( membership== \"undefined\" || typeof membership ==\"undefined\"){\n        membership = false\n    }\n    \n    return {\n        type: CHANGE_MEMBERSHIP,\n        payload: membership\n    }\n}\nexport function changeBalance(balance) {\n    // console.log(\"recall\", cart)\n    if( balance== \"undefined\" || typeof balance ==\"undefined\"){\n        balance = false\n    }\n    \n    return {\n        type: CHANGE_BALANCE,\n        payload: balance\n    }\n}"],"sourceRoot":""}