{"version":3,"sources":["Components/Auth/Login/index.js","Store/actions/actions.js"],"names":["Login","props","state","email","password","emailKey","passwordKey","emailRequired","passwordRequired","handleInput","e","key","setState","target","value","test","length","login","axios","post","process","then","res","data","status","serverError","error","localStorage","setItem","JSON","stringify","user","token","saveAuthInfo","shouldRedirect","this","to","style","marginTop","textAlign","color","onChange","type","onClick","Component","connect","auth","dispatch","SAVE_AUTH_INFO","payload","changeMembership","membership","CHANGE_MEMBERSHIP","changeBalance","balance","CHANGE_BALANCE"],"mappings":"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","file":"static/js/22.37a10c8f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {saveAuthInfo} from '../../../Store/actions/actions'\r\nimport { Link,Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n\r\n        emailKey: false,\r\n        passwordKey: false,\r\n\r\n        emailRequired: false,\r\n        passwordRequired: false,\r\n\r\n    }\r\n    handleInput = (e, key) => {\r\n        this.setState({\r\n            [key]: e.target.value\r\n        })\r\n\r\n        if (key == 'email') {\r\n            const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\r\n            const result = pattern.test(e.target.value);\r\n            if (result === true) {\r\n                this.setState({\r\n                    emailKey: false,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    emailKey: true\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    emailRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    emailRequired: false\r\n                })\r\n            }\r\n\r\n        }\r\n        if (key == 'password') {\r\n            if (e.target.value.length < 4) {\r\n                this.setState({\r\n                    passwordKey: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    passwordKey: false\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    passwordRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    passwordRequired: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n    login = () => {\r\n\r\n        if (this.state.email == '') {\r\n            this.setState({\r\n                emailRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (this.state.password == '') {\r\n            this.setState({\r\n                passwordRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (\r\n            this.state.emailKey ||\r\n            this.state.passwordKey\r\n        ) {\r\n            return;\r\n        } else {\r\n            axios\r\n                .post(\r\n                    `${process.env.REACT_APP_API_URL}/auth/login`,\r\n                    {\r\n                        email: this.state.email,\r\n                        password: this.state.password,\r\n                    }\r\n\r\n                )\r\n                .then((res) => {\r\n                    if (res.data.status > 300) {\r\n                        this.setState({\r\n                            serverError: true,\r\n                            error: res.data.error\r\n                        })\r\n                    }else{\r\n\r\n                        localStorage.setItem('user',JSON.stringify(res.data.user));\r\n                        localStorage.setItem('token',res.data.token)\r\n                        this.props.saveAuthInfo(res.data.user, res.data.token);\r\n                        this.setState({shouldRedirect:true})\r\n                    }\r\n                    \r\n                });\r\n        }\r\n    }\r\n    render() {\r\n        if( this.state.shouldRedirect){\r\n            return <Redirect\r\n            to=\"/\"  />\r\n        }\r\n\r\n        return (\r\n            <div style={{marginTop:'100px', textAlign:\"center\"}}>\r\n                {\r\n                    this.state.serverError\r\n                        ?\r\n                        <div style={{color:\"red\"}}>\r\n                            {this.state.error}\r\n                            </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        email:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'email')} type=\"email\" />\r\n                    {\r\n                        this.state.emailKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                email is invalid.\r\n                   </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.emailRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                email is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        password:\r\n                   </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'password')} type=\"password\" />\r\n                    {\r\n                        this.state.passwordKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                password should be greater than 4 characters.\r\n                   </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.passwordRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                password is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{marginTop:'20px'}}>\r\n                <Link to=\"/forgot-password\">\r\n                       Forgot Password?\r\n                   </Link>\r\n                </div>\r\n               <div style={{marginTop:\"20px\"}}>\r\n                   <button onClick={()=>{this.login()}}>\r\n                       Login\r\n                   </button>\r\n               </div>\r\n               <div style={{marginTop:\"20px\"}}>\r\n                   <Link to=\"/register\">\r\n                       not register? please register now.\r\n                   </Link>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveAuthInfo: (user,token) => dispatch(saveAuthInfo(user,token)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","\nimport {SAVE_AUTH_INFO, CHANGE_MEMBERSHIP, CHANGE_BALANCE} from \"../constants\"\nexport function saveAuthInfo(user,token) {\n    // console.log(\"recall\", cart)\n    if( token== \"undefined\" || typeof token ==\"undefined\"){\n        token = false\n    }\n    \n    return {\n        type: SAVE_AUTH_INFO,\n        payload: {user,token}\n    }\n}\nexport function changeMembership(membership) {\n    // console.log(\"recall\", cart)\n    if( membership== \"undefined\" || typeof membership ==\"undefined\"){\n        membership = false\n    }\n    \n    return {\n        type: CHANGE_MEMBERSHIP,\n        payload: membership\n    }\n}\nexport function changeBalance(balance) {\n    // console.log(\"recall\", cart)\n    if( balance== \"undefined\" || typeof balance ==\"undefined\"){\n        balance = false\n    }\n    \n    return {\n        type: CHANGE_BALANCE,\n        payload: balance\n    }\n}"],"sourceRoot":""}