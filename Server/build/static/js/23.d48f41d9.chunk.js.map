{"version":3,"sources":["Components/Auth/Register/index.js","Store/actions/actions.js"],"names":["customStyles","content","position","padding","width","background","border","margin","marginTop","Register","props","state","name","email","password","confirmPassword","nameKey","emailKey","passwordKey","confirmPasswordKey","nameRequired","emailRequired","passwordRequired","confirmPasswordRequired","serverError","error","shouldRedirect","modalIsOpen","verificationCode","handleInput","e","key","setState","target","value","length","test","closeModal","openModal","changeCode","sendCode","axios","post","process","then","res","data","status","alert","verifyCode","code","register","console","log","localStorage","setItem","JSON","stringify","user","token","saveAuthInfo","catch","this","to","style","textAlign","color","onChange","type","onClick","isOpen","onRequestClose","contentLabel","ariaHideApp","Title","className","marginBottom","icon","faWindowClose","Body","minHeight","paddingLeft","paddingRight","Component","connect","auth","dispatch","SAVE_AUTH_INFO","payload","changeMembership","membership","CHANGE_MEMBERSHIP","changeBalance","balance","CHANGE_BALANCE"],"mappings":"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","file":"static/js/23.d48f41d9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthInfo } from '../../../Store/actions/actions'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Modal from 'react-modal';\r\nimport { Row, Col, Card, Table } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faWindowClose,\r\n  faTimes,\r\n  faEye,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        position: 'absolute',\r\n        padding: '0',\r\n        width: '90%',\r\n        background:'transparent',\r\n        border:'none',\r\n        margin: 'auto',\r\n        marginTop: '20px'\r\n    }\r\n};\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        nameKey: false,\r\n        emailKey: false,\r\n        passwordKey: false,\r\n        confirmPasswordKey: false,\r\n        nameRequired: false,\r\n        emailRequired: false,\r\n        passwordRequired: false,\r\n        confirmPasswordRequired: false,\r\n        serverError: false,\r\n        error: '',\r\n        shouldRedirect: false,\r\n        modalIsOpen: false,\r\n        verificationCode: ''\r\n\r\n    }\r\n    handleInput = (e, key) => {\r\n        this.setState({\r\n            [key]: e.target.value\r\n        })\r\n\r\n        if (key == 'name') {\r\n            if (e.target.value.length < 4) {\r\n                this.setState({\r\n                    nameKey: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nameKey: false\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    nameRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nameRequired: false\r\n                })\r\n            }\r\n\r\n        }\r\n        if (key == 'email') {\r\n            const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\r\n            const result = pattern.test(e.target.value);\r\n            if (result === true) {\r\n                this.setState({\r\n                    emailKey: false,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    emailKey: true\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    emailRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    emailRequired: false\r\n                })\r\n            }\r\n\r\n        }\r\n        if (key == 'password') {\r\n            if (e.target.value.length < 4) {\r\n                this.setState({\r\n                    passwordKey: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    passwordKey: false\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    passwordRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    passwordRequired: false\r\n                })\r\n            }\r\n        }\r\n        if (key == 'confirmPassword') {\r\n            if (e.target.value != this.state.password) {\r\n                this.setState({\r\n                    confirmPasswordKey: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    confirmPasswordKey: false\r\n                })\r\n            }\r\n            if (e.target.value == '') {\r\n                this.setState({\r\n                    confirmPasswordRequired: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    confirmPasswordRequired: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n    openModal = () => {\r\n        this.setState({ modalIsOpen: true });\r\n    }\r\n    changeCode = (e) => {\r\n        this.setState({\r\n            verificationCode: e.target.value\r\n        })\r\n    }\r\n    sendCode = () => {\r\n        axios\r\n            .post(\r\n                `${process.env.REACT_APP_API_URL}/auth/send-code`,\r\n                {\r\n                    email: this.state.email,\r\n                }\r\n            )\r\n            .then((res) => {\r\n                if (res.data.status > 300) {\r\n                    this.setState({\r\n                        serverError: true,\r\n                        error: res.data.error\r\n                    })\r\n                } else {\r\n                    alert('Sent verification code successfully!');\r\n                    this.openModal();\r\n                }\r\n\r\n            });\r\n    }\r\n    verifyCode = () => {\r\n        axios\r\n            .post(\r\n                `${process.env.REACT_APP_API_URL}/auth/verify-code`,\r\n                {\r\n                    code: this.state.verificationCode,\r\n                }\r\n            )\r\n            .then((res) => {\r\n                if (res.data.status > 300) {\r\n                    this.setState({\r\n                        serverError: true,\r\n                        error: res.data.error\r\n                    })\r\n                } else {\r\n                    this.register();\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    register = () => {\r\n        if (this.state.name == '') {\r\n            this.setState({\r\n                nameRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (this.state.email == '') {\r\n            this.setState({\r\n                emailRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (this.state.password == '') {\r\n            this.setState({\r\n                passwordRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (this.state.confirmPassword == '') {\r\n            this.setState({\r\n                confirmPasswordRequired: true\r\n            })\r\n            return;\r\n        }\r\n        if (\r\n            this.state.nameKey ||\r\n            this.state.emailKey ||\r\n            this.state.passwordKey ||\r\n            this.state.confirmPasswordKey\r\n        ) {\r\n            return;\r\n        } else {\r\n\r\n\r\n            axios\r\n                .post(\r\n                    `${process.env.REACT_APP_API_URL}/auth/register`,\r\n                    {\r\n                        name: this.state.name,\r\n                        email: this.state.email,\r\n                        password: this.state.password,\r\n                        confirmPassword: this.state.confirmPassword,\r\n                    }\r\n\r\n                )\r\n                .then((res) => {\r\n                    if (res.data.status > 300) {\r\n                        this.setState({\r\n                            serverError: true,\r\n                            error: res.data.error\r\n                        })\r\n                    } else {\r\n                        console.log('res')\r\n                        console.log(res)\r\n\r\n                        localStorage.setItem('user', JSON.stringify(res.data.user));\r\n                        localStorage.setItem('token', res.data.token)\r\n                        this.props.saveAuthInfo(res.data.user, res.data.token);\r\n                        this.setState({ shouldRedirect: true })\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.shouldRedirect) {\r\n            return <Redirect\r\n                to=\"/\" />\r\n        }\r\n        console.log('this.state')\r\n        console.log(this.state)\r\n\r\n        return (\r\n            <div style={{ marginTop: '100px', textAlign: \"center\" }}>\r\n                {\r\n                    this.state.serverError\r\n                        ?\r\n                        <div style={{ color: \"red\" }}>\r\n                            {this.state.error}\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        name:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'name')} type=\"text\" />\r\n                    {\r\n                        this.state.nameKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                name should be greater than 4 characters.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.nameRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                name is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        email:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'email')} type=\"email\" />\r\n                    {\r\n                        this.state.emailKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                email is invalid.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.emailRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                email is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        password:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'password')} type=\"password\" />\r\n                    {\r\n                        this.state.passwordKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                password should be greater than 4 characters.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.passwordRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                password is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        confirm password:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e, 'confirmPassword')} type=\"password\" />\r\n                    {\r\n                        this.state.confirmPasswordKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                password did not match.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        this.state.confirmPasswordRequired\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                confirmed password is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <button onClick={() => { this.sendCode() }}>\r\n                        register\r\n                    </button>\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <Link to=\"/login\">\r\n                        go to login\r\n                    </Link>\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onRequestClose={this.closeModal}\r\n                    contentLabel=\"Verification Modal\"\r\n                    ariaHideApp={false}\r\n                    style={customStyles}\r\n                >\r\n                    <Card style={{width:\"50%\",margin:\"auto\"}} >\r\n                        <Card.Title className=\"bg-warning\" style={{ marginBottom: \"0px\" }}>\r\n                            <FontAwesomeIcon className=\"backIcon\" icon={faWindowClose} onClick={this.closeModal} />\r\n                        </Card.Title>\r\n                        <Card.Body\r\n                            className=\"text-center\"\r\n                            style={{\r\n                                border: \"1\",\r\n                                minHeight: \"175px\",\r\n                                paddingLeft: \"0px\",\r\n                                paddingRight: \"0px\",\r\n                            }}\r\n                        >\r\n                            <h5>\r\n                                Verification Modal\r\n                            </h5>\r\n                            <div className=\"text-center mt-4\">\r\n                                <label>\r\n                                    verification code:\r\n                                </label>\r\n                                <input type=\"text\" onChange={(e) => this.changeCode(e)} value={this.state.verificationCode} />\r\n                                <button onClick={this.verifyCode}>\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveAuthInfo: (user, token) => dispatch(saveAuthInfo(user, token)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","\nimport {SAVE_AUTH_INFO, CHANGE_MEMBERSHIP, CHANGE_BALANCE} from \"../constants\"\nexport function saveAuthInfo(user,token) {\n    // console.log(\"recall\", cart)\n    if( token== \"undefined\" || typeof token ==\"undefined\"){\n        token = false\n    }\n    \n    return {\n        type: SAVE_AUTH_INFO,\n        payload: {user,token}\n    }\n}\nexport function changeMembership(membership) {\n    // console.log(\"recall\", cart)\n    if( membership== \"undefined\" || typeof membership ==\"undefined\"){\n        membership = false\n    }\n    \n    return {\n        type: CHANGE_MEMBERSHIP,\n        payload: membership\n    }\n}\nexport function changeBalance(balance) {\n    // console.log(\"recall\", cart)\n    if( balance== \"undefined\" || typeof balance ==\"undefined\"){\n        balance = false\n    }\n    \n    return {\n        type: CHANGE_BALANCE,\n        payload: balance\n    }\n}"],"sourceRoot":""}