{"version":3,"sources":["Components/Auth/ResetPassword/index.js","Store/actions/actions.js"],"names":["ResetPassword","props","state","password","shouldRedirect","passwordKey","passwordLenKey","handleInput","e","setState","target","value","length","Register","axios","post","process","email","localStorage","getItem","then","res","data","status","serverError","error","console","log","removeItem","setItem","JSON","stringify","user","token","saveAuthInfo","catch","this","to","style","marginTop","textAlign","color","onChange","type","onClick","Component","connect","auth","dispatch","SAVE_AUTH_INFO","payload","changeMembership","membership","CHANGE_MEMBERSHIP","changeBalance","balance","CHANGE_BALANCE"],"mappings":"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","file":"static/js/24.a84b30ae.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthInfo } from '../../../Store/actions/actions'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        password:'',\r\n        shouldRedirect:false,\r\n        passwordKey:false,\r\n        passwordLenKey:false\r\n\r\n    }\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            password:e.target.value\r\n        })\r\n        if(e.target.value==\"\"){\r\n            this.setState({\r\n                passwordKey:true\r\n            })\r\n            return;\r\n        }else{\r\n            this.setState({\r\n                passwordKey:false\r\n            }) \r\n        }\r\n        if(e.target.value.length<4){\r\n            this.setState({\r\n                passwordLenKey:true\r\n            })\r\n            return;\r\n        }else{\r\n            this.setState({\r\n                passwordLenKey:false\r\n            })\r\n        }\r\n\r\n    }\r\n    Register = () => {\r\n        if(this.state.password==\"\"){\r\n            this.setState({\r\n                passwordKey:true\r\n            })\r\n            return;\r\n        }else{\r\n            this.setState({\r\n                passwordKey:false\r\n            }) \r\n        }\r\n        if(this.state.password.length<4){\r\n            this.setState({\r\n                passwordLenKey:true\r\n            })\r\n            return;\r\n        }else{\r\n            this.setState({\r\n                passwordLenKey:false\r\n            })\r\n        }\r\n        axios\r\n        .post(\r\n            `${process.env.REACT_APP_API_URL}/auth/reset-password`,\r\n            {\r\n                email: localStorage.getItem('emailForForgot'),\r\n                password: this.state.password,\r\n            }\r\n\r\n        )\r\n        .then((res) => {\r\n            if (res.data.status > 300) {\r\n                this.setState({\r\n                    serverError: true,\r\n                    error: res.data.error\r\n                })\r\n            } else {\r\n                console.log('res')\r\n                console.log(res)\r\n                localStorage.removeItem('emailForForgot')\r\n                localStorage.setItem('user', JSON.stringify(res.data.user));\r\n                localStorage.setItem('token', res.data.token)\r\n                this.props.saveAuthInfo(res.data.user, res.data.token);\r\n                this.setState({ shouldRedirect: true })\r\n            }\r\n\r\n        })\r\n        .catch((error) => {\r\n                    console.log(error)\r\n                });\r\n    }\r\n    render() {\r\n        console.log('this.state')\r\n        console.log(this.state)\r\n        if (this.state.shouldRedirect) {\r\n            return <Redirect\r\n                to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div style={{ marginTop: '100px', textAlign: \"center\" }}>\r\n                {\r\n                    this.state.serverError\r\n                        ?\r\n                        <div style={{ color: \"red\" }}>\r\n                            {this.state.error}\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <div>\r\n                        Enter  your new password:\r\n                    </div>\r\n                    <input onChange={(e) => this.handleInput(e)} type=\"text\" />\r\n                    {\r\n                        this.state.passwordKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                Password is required.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                     {\r\n                        this.state.passwordLenKey\r\n                            ?\r\n                            <div style={{ color: 'red' }}>\r\n                                Password should be greater than 4 characters.\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </div>\r\n\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <button onClick={() => { this.Register() }}>\r\n                        Reset Password\r\n                    </button>\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <Link to=\"/\">\r\n                        Go To Home\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveAuthInfo: (user, token) => dispatch(saveAuthInfo(user, token)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword)\r\n","\nimport {SAVE_AUTH_INFO, CHANGE_MEMBERSHIP, CHANGE_BALANCE} from \"../constants\"\nexport function saveAuthInfo(user,token) {\n    // console.log(\"recall\", cart)\n    if( token== \"undefined\" || typeof token ==\"undefined\"){\n        token = false\n    }\n    \n    return {\n        type: SAVE_AUTH_INFO,\n        payload: {user,token}\n    }\n}\nexport function changeMembership(membership) {\n    // console.log(\"recall\", cart)\n    if( membership== \"undefined\" || typeof membership ==\"undefined\"){\n        membership = false\n    }\n    \n    return {\n        type: CHANGE_MEMBERSHIP,\n        payload: membership\n    }\n}\nexport function changeBalance(balance) {\n    // console.log(\"recall\", cart)\n    if( balance== \"undefined\" || typeof balance ==\"undefined\"){\n        balance = false\n    }\n    \n    return {\n        type: CHANGE_BALANCE,\n        payload: balance\n    }\n}"],"sourceRoot":""}